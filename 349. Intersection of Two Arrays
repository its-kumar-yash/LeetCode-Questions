Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.


vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();
        vector<int> res;
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        
        int arr[1002] = {0};  //freq Array
        
        for(int i = 0; i< m; i++){
            arr[nums1[i]]++;    //store frequency
        }
        
        for(int i = 0; i< n; i++){
            if(arr[nums2[i]] != 0){
                res.push_back(nums2[i]);
                arr[nums2[i]] = 0;
            }
        }
        
        
        
        return res;
    }
    
    Appproach 2:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        const int n = 1002;
        bool arr1[n] = {false};
        bool arr2[n] = {false};
        vector<int> v;
            
        for(int i = 0; i < nums1.size(); i++){
            arr1[nums1[i]] = true;
        }
        
        for(int i = 0; i < nums2.size(); i++){
            arr2[nums2[i]] = true;
        }
        
        for(int i = 0; i < n; i++){
            if(arr1[i] == true && arr2[i] == true){
                v.push_back(i);
            }
        }
        
        return v;
    }
