A self-dividing number is a number that is divisible by every digit it contains.

For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.
A self-dividing number is not allowed to contain the digit zero.

Given two integers left and right, return a list of all the self-dividing numbers in the range [left, right].


class Solution {
public:
    
    // function for checking, a number is self dividing or not
    bool is_possible(int num){
        int n = num;
        while(n){
            int digit = n % 10;
            
            if(digit == 0 || num % digit != 0)
                return false;
            
            n /= 10;
        }
        
        return true;
    }
    
    vector<int> selfDividingNumbers(int left, int right) {
        
        vector<int> ans;
        // check every number in range
        
        for(int i = left; i <= right; i++){
            if(is_possible(i)){
                ans.push_back(i);
            }
        }
        
        return ans;
    }
};
