An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return the nth ugly number.

**Using Arrays (TLE)**
- Time Complexity - O( N<sup>2</sup> )
```
class Solution {
public:
    bool checkUglyNumber(int n){
        if(n <= 0){
            return false;
        }

        while(n % 2 == 0){
            n = n / 2;
        }
        while(n % 3 == 0){
            n = n / 3;
        }
        while( n % 5 == 0){
            n = n / 5;
        }

        return n == 1;
    }
    int nthUglyNumber(int n) {
        vector<int> result;
        int i = 0, count = 0;
        while(count < n){
            i++;
            if(checkUglyNumber(i)){
                count++;
            }
        }

        return i;
    }
};
```

**Using DP**
Time Complexity - O( N )
Space Complexity - O( N )

```
class Solution {
public:
    int nthUglyNumber(int n) {
        vector<int> result(1,1);
        int ptr2 = 0, ptr3 = 0, ptr5 = 0, temp;

        if(n <= 0 || n > 1690) return 0;

        while(result.size() < n){
            temp = (min(result[ptr2] * 2, min(result[ptr3] * 3, result[ptr5] * 5)));
            result.push_back(temp);

            if(result.back() == result[ptr2]*2){
                ptr2++;
            }
            if(result.back() == result[ptr3]*3){
                ptr3++;
            }
            if(result.back() == result[ptr5]*5){
                ptr5++;
            }
        }

        return result.back();
    }
};
```
