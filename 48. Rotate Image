You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.



**Using Matrix Operation**
* Time Complexity - O( N<sup>2</sup> )
* Algo :
   1.  Take Transpose of the Matrix
   2.  then Reverse each row

```
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int m = matrix.size();
        // finding Transpose of matrix
        for(int i = 0; i < m; i++){
            for(int j = i; j < m; j++){
                if( i != j){
                    swap(matrix[i][j], matrix[j][i]);
                }
            }
        }
        
        // reverse each row
        for(int i = 0; i < m; i++){
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
```
