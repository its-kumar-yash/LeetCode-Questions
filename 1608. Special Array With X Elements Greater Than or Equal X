You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.

Notice that x does not have to be an element in nums.

Return x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.


class Solution {
public:
    int specialArray(vector<int>& nums) {
        int n = nums.size();
        
        for(int i = 0; i < 1001; i++){
            int cnt = 0;
            for(int j = 0; j < n; j++){
                if(i <= nums[j]){
                    cnt++;
                }
            }
            
            if( cnt == i){
                return i;
            }
        }
        
        return -1;
    }
};


class Solution {
public:
    int countGreater(vector<int>& nums, int num){
        int cnt = 0;
        for(int i = 0; i < nums.size(); i++){
            if(num <= nums[i]){
                cnt++;
            }
        }
        
        return cnt;
    }
    
    int specialArray(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int s = 0, e = 1001, mid, cnt;
        
        while(s <= e){
            mid = s + (e - s)/2;
            cnt = countGreater(nums, mid);
            if(cnt == mid){
                return cnt;
            }
            else if(cnt < mid){
                e = mid - 1;
            }
            else{ 
                s = mid + 1;
            }
        }
        
        
        return -1;
    }
};
