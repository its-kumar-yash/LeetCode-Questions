Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.


**Brute Force**
```
class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int cnt = 0;
        
        for(int i = 0; i < grid.size(); i++){
            for(int j = 0; j < grid[0].size(); j++){
                if(grid[i][j] < 0){
                    cnt++;
                }
            }
        }
        
        return  cnt;
    }
};
```


**Using Binary Search**
* Time Complexity - O( N + M )
```
class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size();
        int row = n-1, col = 0;
        int ans = 0;
        
        while(row >= 0 && col < m){
            if(grid[row][col] < 0){
                ans = ans + (m - col);
                row--;
            }
            else{
                col++;
            }
        }
        
        return ans;
    }
};
```
