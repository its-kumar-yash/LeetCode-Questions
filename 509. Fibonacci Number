The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.
Given n, calculate F(n).







**Iterative Approach**
* Time Complexity - O( N ) 
```
class Solution {
public:
    int fibo(int n){
        int a = 0;
        int b = 1;
        int c;
        if( n == 0){
            return a;
        }
        for(int i = 2; i <= n; i++){
            c = a + b;
            a = b;
            b = c;
        }
        
        return b;
    }
    int fib(int n) {
        return fibo(n);
    }
};
```

**Recursive Approach**
* 
```
class Solution {
public:
    int fibo(int n){
        if( n <= 1){
            return n;
        }
        
        return fibo(n-1) + fibo(n-2);
    }
    int fib(int n) {
        
        return fibo(n);
    }
};
```

